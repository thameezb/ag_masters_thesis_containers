 @misc{allan_gray,
  title   = {Allan Gray: Investment company: Investment management},
  url     = {https://www.allangray.co.za/},
  journal = {Allan Gray | Investment Company | Investment Management}
} 

 @misc{docker_usage,
  title   = {Docker: A favourite in the devops world},
  url     = {https://www.opensourceforu.com/2017/02/docker-favourite-devops-world/},
  journal = {Open Source For You},
  author  = {Vivek Ratans},
  year    = {2017},
  month   = {Feb}
} 

 @misc{fargate,
  title     = {Introducing AWS Fargate},
  url       = {https://aws.amazon.com/about-aws/whats-new/2017/11/introducing-aws-fargate-a-technology-to-run-containers-without-managing-infrastructure/},
  journal   = {Amazon},
  publisher = {AWS},
  year      = {2018}
}
 
 @misc{eks,
  title     = {AWS EKS now GA},
  url       = {https://aws.amazon.com/blogs/aws/amazon-eks-now-generally-available/},
  journal   = {Amazon},
  publisher = {Greenhaven Press/Gale},
  author    = {Barr, Jeff},
  year      = {2018},
  month     = {June}
} 
 @misc{lambda,
  title     = {AWS Lambda Container Image Support},
  url       = {https://aws.amazon.com/blogs/aws/new-for-aws-lambda-container-image-support/},
  journal   = {Amazon},
  publisher = {Greenhaven Press/Gale},
  author    = {Danilo Poccia},
  year      = {2020},
  month     = {December}
}
 
 @misc{ecs,
  title   = {Amazon launches EC2 container service to help developers manage Dockerized Apps},
  url     = {https://www.geekwire.com/2014/amazon-launches-ec2-container-service-help-developers-manage-dockerized-applications/},
  journal = {GeekWire},
  author  = {Frank, Blair Hanley},
  year    = {2014},
  month   = {Nov}
} 
 
 @misc{virtualization,
  title     = {Software containers: Used more frequently than most realize},
  url       = {https://www.networkworld.com/article/2226996/software-containers--used-more-frequently-than-most-realize.html},
  journal   = {Network World},
  publisher = {Network World},
  author    = {Hogg and Scott},
  year      = {2014},
  month     = {May}
} 
 
 @misc{k8s,
  title     = {2021 State of Cloud Native Development},
  url       = {https://www.cncf.io/wp-content/uploads/2021/12/Q1-2021-State-of-Cloud-Native-development-FINAL.pdf},
  journal   = {CNCF},
  publisher = {SlashData},
  author    = {Jack Witkowski},
  year      = {2021}
} 
 
 @misc{contaier_workloads,
  title   = {Container workloads: AWS vs. Azure vs. GCP},
  url     = {https://epsagon.com/development/container-workloads-on-aws-vs-azure-vs-gcp/},
  journal = {Epsagon},
  author  = {Ribanzaft, Ran},
  year    = {2020},
  month   = {Dec}
} 
 
 @misc{aws_cloud_share,
  title   = {Infographic: Amazon leads \$180-billion cloud market},
  url     = {https://www.statista.com/chart/18819/worldwide-market-share-of-leading-cloud-infrastructure-service-providers/},
  journal = {Statista Infographics},
  author  = {Richter, Felix},
  year    = {2022},
  month   = {Feb}
} 
 
 @misc{aws_users,
  title     = {The Biggest AWS Users},
  url       = {https://www.linkedin.com/pulse/biggest-aws-users-nikhil-suryawanshi/},
  journal   = {LinkedIn},
  publisher = {LinkedIn},
  author    = {Suryawanshi, Nikhil},
  year      = {2021},
  month     = {Feb}
} 

 @misc{m5,
  title     = {M5-The Next Generation of General Purpose EC2 Instances},
  url       = {https://aws.amazon.com/blogs/aws/m5-the-next-generation-of-general-purpose-ec2-instances/},
  journal   = {Amazon},
  publisher = {AWS},
  author    = {Barr, Jeff},
  year      = {2017},
  month     = {Nov}
} 

 @misc{phoronix_test_suite,
  title   = {Phoronix Test Suite - Linux Testing and Benchmarking Platform, automated testing, open-source benchmarking},
  url     = {https://www.phoronix-test-suite.com/},
  journal = {Phoronix Test Suite - Linux Testing and Benchmarking Platform, Automated Testing, Open-Source Benchmarking}
} 

 @misc{openbenchmarking.org_2020,
  title     = {OpenBenchmarkingSuite},
  url       = {https://openbenchmarking.org/},
  journal   = {OpenBenchmarking.org},
  publisher = {Phoronix Media},
  year      = {2020}
} 

 @misc{akopytov_2020,
  title     = {sysbench: Scriptable Database and System Performance Benchmark},
  url       = {https://github.com/akopytov/sysbench},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Akopytov},
  year      = {2020},
  month     = {Feb}
} 

 @misc{sloman_quanta,
  title   = {Mathematician answers chess problem about attacking Queens},
  url     = {https://www.quantamagazine.org/mathematician-answers-chess-problem-about-attacking-queens-20210921/},
  journal = {Quanta Magazine},
  author  = {Sloman, Leila},
  year    = {2021},
  month   = {Sep}
} 

 @misc{bodhanya_2022,
  title   = {Github Lists - Master Thesis Projects},
  url     = {https://github.com/stars/thameezb/lists/masters-thesis-project},
  journal = {GitHub},
  author  = {Bodhanya, Thameez},
  year    = {2022},
  month   = {Jul}
} 

 @misc{tool_benchmarking_suite,
  title   = {Github - tool-benchmarking-suite},
  url     = {https://github.com/thameezb/tool-benchmarking-suite},
  journal = {GitHub},
  author  = {Bodhanya, Thameez},
  year    = {2022},
  month   = {Jul}
} 

 @misc{tool_container_benchmark,
  title   = {Github - tool-container-benchmark},
  url     = {https://github.com/thameezb/tool-container-benchmark},
  journal = {GitHub},
  author  = {Bodhanya, Thameez},
  year    = {2022},
  month   = {Jul}
} 

 @misc{blocher_juras_smith_2022,
  title     = {Cost management: A strategic emphasis},
  url       = {https://docs.aws.amazon.com/cost-management/latest/userguide/ce-what-is.html},
  journal   = {Amazon},
  publisher = {McGraw Hill},
  author    = {Blocher, Edward and Juras, Paul E. and Smith, Steven D.},
  year      = {2022}
} 

 @misc{venning_2020,
  title     = {Pricing and Forecasting calculator},
  url       = {https://docs.aws.amazon.com/pricing-calculator/latest/userguide/what-is-pricing-calculator.html},
  journal   = {Amazon},
  publisher = {AWS},
  author    = {Venning, SV},
  year      = {2020}
} 

 @misc{ubuntu_wiki,
  title     = {Ubuntu Focal Fossa Release Notes},
  url       = {https://wiki.ubuntu.com/FocalFossa/ReleaseNotes},
  journal   = {Ubuntu wiki},
  publisher = {Canonical},
  year      = {2022}
} 

 @misc{go,
  title     = {Build fast, reliable, and efficient software at scale},
  url       = {https://go.dev/},
  journal   = {Go},
  publisher = {Google},
  year      = {2022}
}

 @misc{hollander_bolotoff_2002,
  title     = {RAMspeed, a cache and memory benchmarking tool},
  url       = {http://www.alasir.com/software/ramspeed/},
  journal   = {RAMspeed, a cache and memory benchmark},
  publisher = {Alasir},
  author    = {Hollander , Rhett M and Bolotoff   , Paul  V},
  year      = {2002},
  month     = {Nov}
} 

 @misc{raas_2022,
  title     = {Raas/MBW: Memory Bandwidth Benchmark},
  url       = {https://github.com/raas/mbw},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Raas},
  year      = {2022},
  month     = {Apr}
} 

 @misc{josefbacik_2014,
  title     = {Josefbacik/fs\_mark: A file system benchmark tool},
  url       = {https://github.com/josefbacik/fs\_mark},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Josefbacik},
  year      = {2014},
  month     = {Oct}
} 

 @misc{sudden6_2014,
  title     = {Sudden6/M-Queens: Very fast N-queens solver with openmp support},
  url       = {https://github.com/sudden6/m-queens},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {sudden6},
  year      = {2014},
  month     = {Oct}
} 

 @misc{7zip_lzma_benchmark,
  title   = {7Zip LZMA Benchmark},
  url     = {https://www.7-cpu.com/},
  journal = {7Zip LZMA Benchmark},
  year    = {2014},
  month   = {Feb}
} 

 @misc{weaveworks,
  title     = {The official CLI for Amazon Eks},
  url       = {https://eksctl.io/},
  journal   = {eksctl-The official CLI for Amazon Eks},
  publisher = {WeaveWorks},
  author    = {WeaveWorks}
} 

 @misc{kubectl,
  title     = {Kubectl - the official CLI for K8s},
  url       = {https://kubernetes.io/docs/tasks/tools/},
  journal   = {Kubernetes},
  publisher = {Google}
} 

 @misc{pittman_2020,
  title   = {How kubernetes contributors are building a better communication process},
  url     = {https://kubernetes.io/blog/2020/04/21/contributor-communication/#:~:text=With%20over%2043%2C000%20contributors%2C%20our,and%20folks%20are%20taking%20action.},
  journal = {Kubernetes - How kubernetes contributors are building a better communication process},
  author  = {Pittman, Paris},
  year    = {2020},
  month   = {Apr}
} 

 @misc{thameezb_2022,
  title     = {Thameezb/tool-deploy-eks},
  url       = {https://github.com/thameezb/tool-deploy-eks},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Thameezb},
  year      = {2022},
  month     = {Jul}
} 

 @misc{thameezb,
  title     = {Thameezb/tool-deploy-platform},
  url       = {https://github.com/thameezb/tool-deploy-platform},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {thameezb},
  year      = {2022},
  month     = {Jul}
} 

@article{POTDAR20201419,
  title    = {Performance Evaluation of Docker Container and Virtual Machine},
  journal  = {Procedia Computer Science},
  volume   = {171},
  pages    = {1419-1428},
  year     = {2020},
  note     = {Third International Conference on Computing and Network Communications (CoCoNet'19)},
  issn     = {1877-0509},
  doi      = {https://doi.org/10.1016/j.procs.2020.04.152},
  url      = {https://www.sciencedirect.com/science/article/pii/S1877050920311315},
  author   = {Amit M Potdar and Narayan {D G} and Shivaraj Kengond and Mohammed Moin Mulla},
  keywords = {Virtualization, Docker Container, Virtual Machine, Benchmark tools},
  abstract = {Server virtualization is a technological innovation broadly used in IT enterprises. Virtualization provides a platform to run different services of operating systems on the cloud. It facilitates to build multiple virtual machines on a single basic physical machine either in the form of hypervisors or containers. To host many microservice applications, the emergent technology has introduced a model which consists of different operations performed by smaller individual deployed services. Thus, the demand for low-overhead virtualization technique is rapidly developing. There are many lightweight virtualization technologies; docker is one among them, which is an open-source platform. This technology allows developers and system admins to build, create, and run applications using docker engine. This paper provides the performance evaluation of Docker containers and virtual machines using standard benchmark tools such as Sysbench, Phoronix, and Apache benchmark, which include CPU performance, Memory throughput, Storage read/write performance, load test, and operation speed measurement.}
}

 @misc{vmware_2022,
  title     = {VMWare Workstation player},
  url       = {https://www.vmware.com/products/workstation-player.html},
  journal   = {VMware},
  publisher = {VMware},
  year      = {2022},
  month     = {Jul}
} 

@inproceedings{chellappa1997intermediaries,
  title     = {Intermediaries in cloud-computing: A new computing paradigm},
  author    = {Chellappa, Ramnath},
  booktitle = {INFORMS Annual Meeting, Dallas},
  pages     = {26--29},
  year      = {1997}
}

@article{ray2018,
  author  = {Ray, Partha Pratim},
  journal = {IEEE Access},
  title   = {An Introduction to Dew Computing: Definition, Concept and Implications},
  year    = {2018},
  volume  = {6},
  number  = {},
  pages   = {723-737},
  doi     = {10.1109/ACCESS.2017.2775042}
}

@article{haris2018systematic,
  title   = {A systematic review on cloud computing},
  author  = {Haris, Mohammad and Khan, Rafiqul Zaman},
  journal = {International Journal of Computer Sciences and Engineering},
  volume  = {6},
  number  = {11},
  pages   = {632--639},
  year    = {2018}
}

@inbook{Beach2019,
  author    = {Beach, Brian
               and Armentrout, Steven
               and Bozo, Rodney
               and Tsouris, Emmanuel},
  title     = {Virtual Private Cloud},
  booktitle = {Pro PowerShell for Amazon Web Services},
  year      = {2019},
  publisher = {Apress},
  address   = {Berkeley, CA},
  pages     = {85--115},
  abstract  = {In this chapter we are going to discuss Virtual Private Cloud (VPC). VPC allows you to configure a custom network topology, as well as manage IP routing and security. A network topology is the structure of the network and controls how data flows between nodes.},
  isbn      = {978-1-4842-4850-8},
  doi       = {10.1007/978-1-4842-4850-8_5},
  url       = {https://doi.org/10.1007/978-1-4842-4850-8_5}
}

 @misc{awsdocs_2022,
  title     = {Amazon-VPC-user-guide/what-IS-amazon-vpc},
  url       = {https://github.com/awsdocs/amazon-vpc-user-guide/blob/master/doc_source/what-is-amazon-vpc.md},
  journal   = {GitHub},
  publisher = {AWS},
  author    = {Awsdocs},
  year      = {2022},
  month     = {Jun}
} 

 @misc{carty_2015,
  title     = {What is availability zones? - definition from whatis.com},
  url       = {https://www.techtarget.com/searchaws/definition/availability-zones},
  journal   = {SearchAWS},
  publisher = {TechTarget},
  author    = {Carty, David},
  year      = {2015},
  month     = {Sep}
} 

 @misc{awsdocs_whatsisec2,
  title     = {Amazon-EC2-user-guide},
  url       = {https://github.com/awsdocs/amazon-ec2-user-guide/blob/master/doc_source/concepts.md#what-is-amazon-ec2},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Awsdocs},
  year      = {2022},
  month     = {Apr}
} 

 @misc{carty_2019,
  title     = {What is Amazon EC2 (elastic compute cloud)? },
  url       = {https://www.techtarget.com/searchaws/definition/Amazon-Elastic-Compute-Cloud-Amazon-EC2},
  journal   = {SearchAWS},
  publisher = {TechTarget},
  author    = {Carty, David},
  year      = {2019},
  month     = {May}
} 

 @misc{daly_2022,
  title     = {AWS EC2 Instance Type},
  url       = {https://aws.amazon.com/ec2/instance-types/},
  journal   = {Amazon},
  publisher = {AWS},
  author    = {Daly, Donald J.},
  year      = {2022}
} 

 @misc{awsdocs_ec2os,
  title     = {EC2 Operating Systems},
  url       = {https://github.com/awsdocs/aws-systems-manager-user-guide/blob/main/doc_source/prereqs-operating-systems.md},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Awsdocs},
  year      = {2022},
  month     = {Jul}
} 

 @misc{awsdocs_ami,
  title     = {EC2 Instances and AMIs},
  url       = {https://github.com/awsdocs/amazon-ec2-user-guide/blob/master/doc_source/ec2-instances-and-amis.md#instances-and-amis},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {awsdocs},
  year      = {2022},
  month     = {May}
} 

@inbook{Beach2014,
  author    = {Beach, Brian},
  title     = {Amazon Machine Images},
  booktitle = {Pro Powershell for Amazon Web Services: DevOps for the AWS Cloud},
  year      = {2014},
  publisher = {Apress},
  address   = {Berkeley, CA},
  pages     = {115--134},
  abstract  = {In the last few chapters we have focused on creating and managing instances. This chapter is about the templates we use to create those instances. Amazon refers to these templates as Amazon Machine Images (AMIs). In this chapter we will explore the AMIs that already exist, and we will discuss how to create your own AMI and share it with others. Finally, we learn how to import a VM from VMware or Hyper-V into AWS.},
  isbn      = {978-1-4302-6452-1},
  doi       = {10.1007/978-1-4302-6452-1_7},
  url       = {https://doi.org/10.1007/978-1-4302-6452-1_7}
}

 @misc{awsdocs_asg,
  title     = {Autoscaling Groups},
  url       = {https://github.com/awsdocs/amazon-ec2-auto-scaling-user-guide/blob/master/doc_source/auto-scaling-groups.md},
  journal   = {GitHub},
  publisher = {Microsoft},
  author    = {Awsdocs},
  year      = {2022},
  month     = {Jun}
} 

 @misc{amazon_asg_docs,
  title     = {EC2 Autoscaling Groups documentation},
  url       = {https://docs.aws.amazon.com/autoscaling/ec2/userguide/AutoScalingGroup.html},
  journal   = {Amazon EC2 Auto Scaling - AWS documentation},
  publisher = {AWS},
  year      = {2022},
  month     = {Mar}
} 

 @misc{amazon_2016,
  title     = {AWS VPC Security Groups},
  url       = {https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html},
  journal   = {Amazon},
  publisher = {AWS},
  year      = {2016}
} 

@incollection{beach2019relational,
  title     = {Relational database service},
  author    = {Beach, Brian and Armentrout, Steven and Bozo, Rodney and Tsouris, Emmanuel},
  booktitle = {Pro Powershell for Amazon Web Services},
  pages     = {237--274},
  year      = {2019},
  publisher = {Springer}
}

 @misc{lutkevich_2021,
  title     = {What is amazon RDS (Relational Database Service)?},
  url       = {https://www.techtarget.com/searchaws/definition/Amazon-Relational-Database-Service-RDS},
  journal   = {SearchAWS},
  publisher = {TechTarget},
  author    = {Lutkevich, Ben},
  year      = {2021},
  month     = {Sep}
} 

 @misc{rke,
  url       = {https://rancher.com/products/rke},
  journal   = {Rancher Kubernetes Engine (RKE)},
  title     = {Rancher Kubernetes Engine (RKE)},
  publisher = {Rancher Labs},
  year      = {2022}
} 

@article{popek_1974,
  author     = {Popek, Gerald J. and Goldberg, Robert P.},
  title      = {Formal Requirements for Virtualizable Third Generation Architectures},
  year       = {1974},
  issue_date = {July 1974},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {17},
  number     = {7},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/361011.361073},
  doi        = {10.1145/361011.361073},
  abstract   = {Virtual machine systems have been implemented on a limited number of third generation computer systems, e.g. CP-67 on the IBM 360/67. From previous empirical studies, it is known that certain third generation computer systems, e.g. the DEC PDP-10, cannot support a virtual machine system. In this paper, model of a third-generation-like computer system is developed. Formal techniques are used to derive precise sufficient conditions to test whether such an architecture can support virtual machines.},
  journal    = {Commun. ACM},
  month      = {jul},
  pages      = {412-421},
  numpages   = {10},
  keywords   = {virtual machine monitor, third generation architecture, abstract model, virtual machine, virtual memory, sensitive instruction, proof, operating system, formal requirements, hypervisor}
}

 @misc{n-able_2021,
  url     = {https://www.n-able.com/blog/how-to-clone-a-virtual-machine#:~:text=What%20is%20VM%20cloning%3F,as%20a%20separate%20virtual%20machine.},
  journal = {Clone Virtual Machine: Overview and use cases: N-able},
  author  = {N-able},
  year    = {2021},
  month   = {Mar}
} 

@inproceedings{Martinovic,
  author    = {Martinovic, Goran and Balen, Josip and Rimac-Drlje, Snjesana},
  booktitle = {The 33rd International Convention MIPRO},
  title     = {Impact of the host operating systems on virtual machine performance},
  year      = {2010},
  volume    = {},
  number    = {},
  pages     = {613-618},
  doi       = {}
}

 @misc{pavlov_2022,
  url       = {https://www.7-zip.org/},
  journal   = {7Zip},
  publisher = {Igor Pavlov},
  author    = {Pavlov, Igor},
  year      = {2022}
} 

 @misc{winzip_2021,
  title     = {What is LZMA},
  url       = {https://www.winzip.com/en/learn/tips/what-is-lzma},
  journal   = {WinZip},
  publisher = {WinZip},
  year      = {2021}
} 

@inbook{martin1983managing,
  title     = {Managing the data base environment},
  author    = {Martin, James},
  year      = {1983},
  publisher = {Prentice Hall PTR},
  pages     = {381},
  isbn      = {0-135-50582-8.}
}

@book{erl1900service,
  title     = {Service-oriented architecture: concepts, technology, and design},
  author    = {Erl, Thomas},
  year      = {1900},
  publisher = {Pearson Education India},
  isbn      = {0-13-185858-0},
  page      = {200}
}

 @misc{hochstein_2019,
  title   = {Chaos Engineering Manifesto},
  url     = {https://principlesofchaos.org/},
  journal = {PRINCIPLES OF CHAOS ENGINEERING - Principles of chaos engineering},
  author  = {Hochstein, Lorin},
  year    = {2019},
  month   = {Mar}
} 

@inbook{wieder2011service,
  title     = {Service Level Agreements for Cloud Computing},
  author    = {Wieder, P. and But ler, J.M. and Theilmann, W. and Yahyapour, R.},
  isbn      = {9781461416142},
  series    = {SpringerLink : B{\"u}cher},
  url       = {https://books.google.de/books?id=z306GUfFL5gC},
  year      = {2011},
  publisher = {Springer New York},
  page      = {14}
}

@article{RAHMAN201965,
  title    = {A systematic mapping study of infrastructure as code research},
  journal  = {Information and Software Technology},
  volume   = {108},
  pages    = {65-77},
  year     = {2019},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2018.12.004},
  url      = {https://www.sciencedirect.com/science/article/pii/S0950584918302507},
  author   = {Akond Rahman and Rezvan Mahdavi-Hezaveh and Laurie Williams},
  keywords = {Devops, Configuration as code, Configuration script, Continuous deployment, Infrastructure as code, Software engineering, Systematic mapping study},
  abstract = {Context: Infrastructure as code (IaC) is the practice to automatically configure system dependencies and to provision local and remote instances. Practitioners consider IaC as a fundamental pillar to implement DevOps practices, which helps them to rapidly deliver software and services to end-users. Information technology (IT) organizations, such as GitHub, Mozilla, Facebook, Google and Netflix have adopted IaC. A systematic mapping study on existing IaC research can help researchers to identify potential research areas related to IaC, for example defects and security flaws that may occur in IaC scripts. Objective: The objective of this paper is to help researchers identify research areas related to infrastructure as code (IaC) by conducting a systematic mapping study of IaC-related research. Method: We conduct our research study by searching five scholar databases. We collect a set of 31,498 publications by using seven search strings. By systematically applying inclusion and exclusion criteria, which includes removing duplicates and removing non-English and non peer-reviewed publications, we identify 32 publications related to IaC. We identify topics addressed in these publications by applying qualitative analysis. Results: We identify four topics studied in IaC-related publications: (i) framework/tool for infrastructure as code; (ii) adoption of infrastructure as code; (iii) empirical study related to infrastructure as code; and (iv) testing in infrastructure as code. According to our analysis, 50.0% of the studied 32 publications propose a framework or tool to implement the practice of IaC or extend the functionality of an existing IaC tool. Conclusion: Our findings suggest that framework or tools is a well-studied topic in IaC research. As defects and security flaws can have serious consequences for the deployment and development environments in DevOps, we observe the need for research studies that will study defects and security flaws for IaC.}
}

 @misc{chef,
  title     = {Chef},
  url       = {https://www.chef.io/},
  journal   = {Chef},
  publisher = {Progress},
  year      = {2022}
} 

 @misc{puppet,
  title     = {Puppet},
  url       = {https://puppet.com/},
  journal   = {Puppet},
  publisher = {PerForce},
  year      = {2022}
} 

 @misc{ansible,
  title     = {ansible},
  url       = {https://www.ansible.com/},
  journal   = {Ansible},
  publisher = {RedHat},
  year      = {2022}
} 

 @misc{terraform,
  title     = {Terraform},
  url       = {https://www.terraform.io/},
  journal   = {terraform},
  publisher = {HashiCorp},
  year      = {2022}
} 

 @misc{packer,
  title     = {packer},
  url       = {https://www.packer.io/},
  journal   = {packer},
  publisher = {HashiCorp},
  year      = {2022}
} 

 @misc{hashicorp_tf_iac,
  title     = {What is infrastructure as code with terraform?},
  url       = {https://learn.hashicorp.com/tutorials/terraform/infrastructure-as-code},
  journal   = {What is infrastructure as code with terraform?},
  publisher = {HashiCorp},
  year      = {2022},
  month     = {Jun}
} 

 @misc{hashicorp,
  title     = {Hashicorp},
  url       = {https://www.hashicorp.com/},
  journal   = {HashiCorp},
  publisher = {HashiCorp},
  year      = {2022}
} 

 @misc{HashiCorp_packer_docs,
  title     = {About packer},
  url       = {https://cloud.hashicorp.com/docs/packer},
  journal   = {HashiCorp},
  publisher = {HashiCorp},
  year      = {2022},
  month     = {Jan}
} 

 @misc{barr_2009,
  title     = {The AWS Blog: The First Five Years},
  url       = {https://aws.amazon.com/blogs/aws/aws-blog-the-first-five-years/},
  publisher = {AWS},
  author    = {Barr, Jeff},
  year      = {2009},
  month     = {Nov},
  day       = {9}
} 

@phdthesis{10.5555/1571423,
  author    = {Yu, Yang},
  title     = {Os-Level Virtualization and Its Applications},
  year      = {2007},
  isbn      = {9780549914075},
  publisher = {State University of New York at Stony Brook},
  address   = {USA},
  abstract  = {OS-level virtualization is a technology that partitions the operating system to create multiple isolated Virtual Machines (VM). An OS-level VM is a virtual execution environment that can be forked instantly from the base operating environment. OS-level virtualization has been widely used to improve security, manageability and availability of today’s complex software environment, with small runtime and resource overhead, and with minimal changes to the existing computing infrastructure. A main challenge with OS-level virtualization is how to achieve strong isolation among VMs that share a common base OS. In this dissertation we study major OS components of Windows NT kernel, and present a Feather-weight Virtual Machine (FVM), an OS-level virtualization implementation on Windows platform. The key idea behind FVM is access redirection and copy-on-write, which allow each VM to read from the base environment but write into the VM’s private workspace. In addition, we identify various communication interfaces and confine them in the scope of each individual VM. We demonstrate how to accomplish these tasks to isolate different VMs, and evaluate FVM’s performance overhead and scalability. We present five applications on the FVM framework: secure mobile code execution service, vulnerability assessment support engine, scalable web site testing, shared binary service for application deployment and distributed Display-Only File Server . To prevent malicious mobile code from compromising desktop’s integrity, we confine the execution of untrusted content inside a VM. To isolate undesirable side effects on production-mode network service during vulnerability scans, we clone the service to be scanned into a VM, and invoke vulnerability scanners on the virtualized service. To identify malicious web sites that exploit browser vulnerabilities, we use a web crawler to access untrusted sites, render their pages with browsers running in VMs, and monitor their execution behaviors. To allow Windows desktop to share binaries that are centrally stored, managed and patched, we launch shared binaries in a special VM whose runtime environment is imported from a central binary server. To protect confidential files in a file server against information theft by insiders, we ensure that file viewing/editing tools run in a client VM, which grants file content display but prevents file content from being saved on the client machine. In this dissertation, we show how to customize the generic FVM framework to accommodate the needs of these applications, and present experimental results that demonstrate their performance and effectiveness.},
  note      = {AAI3337611}
}

@inproceedings{6903537,
  author    = {Dua, Rajdeep and Raja, A Reddy and Kakadia, Dharmesh},
  booktitle = {2014 IEEE International Conference on Cloud Engineering},
  title     = {Virtualization vs Containerization to Support PaaS},
  year      = {2014},
  volume    = {},
  number    = {},
  pages     = {610-614},
  doi       = {10.1109/IC2E.2014.41}
}

@article{7093032,
  author  = {Anderson, Charles},
  journal = {IEEE Software},
  title   = {Docker [Software engineering]},
  year    = {2015},
  volume  = {32},
  number  = {3},
  pages   = {102-c3},
  doi     = {10.1109/MS.2015.62}
}

@article{rad2017introduction,
  title     = {An introduction to docker and analysis of its performance},
  author    = {Rad, Babak Bashari and Bhatti, Harrison John and Ahmadi, Mohammad},
  journal   = {International Journal of Computer Science and Network Security (IJCSNS)},
  volume    = {17},
  number    = {3},
  pages     = {228},
  year      = {2017},
  publisher = {International Journal of Computer Science and Network Security}
}

 @misc{docker,
  title     = {Docker},
  url       = {https://www.docker.com/},
  journal   = {Docker Inc},
  publisher = {Docker},
  year      = {2022}
} 

 @misc{kubernetes,
  title     = {Kubernetes},
  url       = {https://kubernetes.io/},
  journal   = {K8s},
  publisher = {CNCF},
  year      = {2022}
} 

 @misc{metz_2014,
  title     = {Google open sources its secret weapon in cloud computing},
  url       = {https://www.wired.com/2014/06/google-kubernetes/},
  journal   = {Wired},
  publisher = {Conde Nast},
  author    = {Metz, Cade},
  year      = {2014},
  month     = {Jun}
} 

@inproceedings{10.1145/2741948.2741964,
  author    = {Verma, Abhishek and Pedrosa, Luis and Korupolu, Madhukar and Oppenheimer, David and Tune, Eric and Wilkes, John},
  title     = {Large-Scale Cluster Management at Google with Borg},
  year      = {2015},
  isbn      = {9781450332385},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2741948.2741964},
  doi       = {10.1145/2741948.2741964},
  abstract  = {Google's Borg system is a cluster manager that runs hundreds of thousands of jobs, from many thousands of different applications, across a number of clusters each with up to tens of thousands of machines.It achieves high utilization by combining admission control, efficient task-packing, over-commitment, and machine sharing with process-level performance isolation. It supports high-availability applications with runtime features that minimize fault-recovery time, and scheduling policies that reduce the probability of correlated failures. Borg simplifies life for its users by offering a declarative job specification language, name service integration, real-time job monitoring, and tools to analyze and simulate system behavior.We present a summary of the Borg system architecture and features, important design decisions, a quantitative analysis of some of its policy decisions, and a qualitative examination of lessons learned from a decade of operational experience with it.},
  booktitle = {Proceedings of the Tenth European Conference on Computer Systems},
  articleno = {18},
  numpages  = {17},
  location  = {Bordeaux, France},
  series    = {EuroSys '15}
}

 @misc{kubernetes_2022,
  title     = {What is kubernetes?},
  url       = {https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/#why-you-need-kubernetes-and-what-can-it-do},
  journal   = {Kubernetes},
  publisher = {CNCF},
  year      = {2022},
  month     = {Apr}
} 

@inbook{luksa2017kubernetes,
  title     = {Kubernetes in action},
  author    = {Luksa, Marko},
  year      = {2017},
  publisher = {Simon and Schuster},
  isbn      = {9781617293726},
  page      = {19}
}

 @misc{ecs_2022,
  url       = {https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html},
  journal   = {What is Amazon Elastic Container Service?},
  publisher = {AWS},
  year      = {2022},
  month     = {Jun}
} 

 @misc{hansen_2022,
  url       = {https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html},
  journal   = {What is EKS?},
  publisher = {AWS},
  author    = {Hansen, Niels Arthur},
  year      = {2022}
} 